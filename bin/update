#! /usr/bin/env bash
set -uf

# XXX: This is hard to keep in sync with the location of the local database
# XXX: I don't think the pacman configuration file can read environment
# XXX: though, which prevents parameterizing the location.
# XXX: Next step might be dhall?

if test -f "${XDG_CONFIG_HOME}"/packages/jared.db
then
    pikaur -Syu
else
    printf "could not find local database %s\n" \
        "${XDG_CONFIG_HOME}/packages/jared.db"
    printf "run \`make jared.db\` in %s\n" \
        "${XDG_CONFIG_HOME}/packages"
    exit 1
fi

printf "\n"
printf "\033[1mchecking for orphaned packages\033[0m\n"
mapfile -t orphans < <(pikaur -Qtdq)

if [ ${#orphans[@]} -ne 0 ]
then
    pikaur -Rns "${orphans[@]}"
fi

printf "\n"
printf "\033[1mupdating passwords\033[0m\n"
if [ -d "${PASSWORD_STORE_DIR:-~/.password-store}/.git" ]
then
    git -C "${PASSWORD_STORE_DIR:-~/.password-store}" pull
    git -C "${PASSWORD_STORE_DIR:-~/.password-store}" push
fi


if [ -x "$(command -v fwupdmgr)" ]
then
    fwupdmgr refresh
    fwupdmgr get-updates
fi

if [ -x "$(command -v bat)" ]
then
    (cd / && bat cache --build)
fi

home submodule update --init --remote --rebase
